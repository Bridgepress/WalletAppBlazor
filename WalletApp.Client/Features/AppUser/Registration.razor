@page "/register"
@using WalletApp.Client.DTO.AppUser
@using WalletApp.Client.HttpRepositories
@inject NavigationManager nav
@inject IJSRuntime JS

    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                <div class="card" style="border-radius: 15px;">
                    <div class="card-body p-5">
                        <h2 class="text-uppercase text-center mb-5">Create an account</h2>
                        <EditForm Model="Register" OnValidSubmit="OnValid">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-outline mb-4">
                                <InputText @bind-Value="Register.Name" id="form3Example1cg" class="form-control form-control-lg" placeholder="Enter Name" />
                                <ValidationMessage For="@(() => Register.Name)" />
                            </div>

                            <div class="form-outline mb-4">
                                <InputText type="password" @bind-Value="Register.Password" id="form3Example4cg" class="form-control form-control-lg" placeholder="Enter Password" />
                                <ValidationMessage For="@(() => Register.Password)" />
                            </div>

                            <div class="form-outline mb-4">
                                 <InputText type="password" @bind-Value="Register.ConfirmPassword" id="form3Example4cdg" class="form-control form-control-lg" placeholder="Confirm Password" />
                                 <ValidationMessage For="@(() => confirmPassword)" />
                            </div>

                            <div class="d-flex justify-content-center">
                            <input type="submit"
                                   value="Registration"
                                   class="btn btn-success btn-block btn-lg gradient-custom-4 text-body" disabled="@isDisabled" />
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>


@code {
    RegisterDTO Register = new RegisterDTO();
    string confirmPassword = string.Empty;
    string message = string.Empty;
    string login = string.Empty;
    bool isDisabled = false;
    UserDTO? user;
    [Inject]
    public IAppUserRepository UserRepository { get; set; } = default!;

    private async Task OnValid()
    {
        user = await UserRepository.registerUser(Register);
        if (user is not null)
        {
            await JS.InvokeVoidAsync(
            "actionToastHandler",
            "bg-success",
             $"Registration is successful!");
            nav.NavigateTo("/");
        }
        else
        {
            await JS.InvokeVoidAsync(
            "actionToastHandler",
            "bg-danger",
            $"This name already exists");
        }
    }
}
